#!/bin/bash
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     PLATFORM=Linux;;
    Darwin*)    PLATFORM=macOS;;
    CYGWIN*)    PLATFORM=Cygwin;;
    MINGW*)     PLATFORM=MinGw;;
    *)          PLATFORM="UNKNOWN:${unameOut}"
esac

export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
export PATH="$HOME/.npm-global/bin:$PATH"

IGNOREEOF=10 # Shell only exists after the 10th consecutive Ctrl-d

# Load the git bash library to get access to __git_ps1 function, used in the prompt
if [ "$PLATFORM" == "macOS" ]; then
	# From built-in Git:
	source /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh

	# From Homebrew:
	source /usr/local/etc/bash_completion.d/git-completion.bash
else
	# Should work in Linux - untested
	source /etc/bash_completion.d/git
fi

__my_git_ps1() {
	# __git_ps1 returns a string " (name_of_branch)", so remove the first space and the parenthesis.
	# Also add space around branch name to make it easier to copy using mouse double-click.
	local branch=$(__git_ps1)
	if [ -n "$branch" ]; then
		branch="${branch:2:${#branch}-3}"
		branch=" ( $branch )"
		echo "$branch"
	fi
}

PS1='\[\033[1;36m\]\u\[\033[1;31m\]@\[\033[1;36m\]\h \[\033[1;35m\]\D{%T} \[\033[1;32m\]\w\[\033[1;31m\]$(__my_git_ps1)\n\$\[\033[0m\] '

export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# Not working in macOS:
#alias ls='LANG=C ls --color=auto'
alias ll='ls -alh'
alias sqlite3="sqlite3 -header -column"

man() {
	env \
		LESS_TERMCAP_mb=$(printf "\e[1;36m") \
		LESS_TERMCAP_md=$(printf "\e[1;36m") \
		LESS_TERMCAP_me=$(printf "\e[0m") \
		LESS_TERMCAP_se=$(printf "\e[0m") \
		LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\e[0m") \
		LESS_TERMCAP_us=$(printf "\e[1;32m") \
			man "$@"
}

curl_headers() {
	curl -s -D - $1 -o /dev/null
}

export VISUAL=vim
export EDITOR="$VISUAL"

PATH=$PATH:"$SCRIPT_DIR/git-commands"
PATH=$PATH:"$SCRIPT_DIR/bin"
PATH=$PATH:"$HOME/.local/bin"
